plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    namespace = "com.example.app_e_bike"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.example.HOOK"
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
        multiDexEnabled true // Enable MultiDex
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.debug
        }
    }

    configurations.all {
        resolutionStrategy.force 'androidx.core:core-ktx:1.6.0'
    }
}

flutter {
    source = "../.."
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.0" // Updated Kotlin version
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.google.android.gms:play-services-location:18.0.0'
    implementation 'androidx.multidex:multidex:2.0.1'
}














//plugins {
//    id "com.android.application"
//    id "kotlin-android"
//    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
//    id "dev.flutter.flutter-gradle-plugin"
//    id "com.google.gms.google-services"
//}
//
////dependencies {
////    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
////}
//
//repositories {
//    google()
//    mavenCentral()
//}
//
//def localProperties = new Properties()
//def localPropertiesFile = rootProject.file("local.properties")
//if (localPropertiesFile.exists()) {
//    localPropertiesFile.withReader("UTF-8") { reader ->
//        localProperties.load(reader)
//    }
//}
//
//def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
//if (flutterVersionCode == null) {
//    flutterVersionCode = "1"
//}
//
//def flutterVersionName = localProperties.getProperty("flutter.versionName")
//if (flutterVersionName == null) {
//    flutterVersionName = "1.0"
//}
//
//android {
//    namespace = "com.example.app_e_bike"
//    compileSdk = flutter.compileSdkVersion
//    ndkVersion = flutter.ndkVersion
//
//    compileOptions {
//        sourceCompatibility = JavaVersion.VERSION_1_8
//        targetCompatibility = JavaVersion.VERSION_1_8
//    }
//
//    defaultConfig {
//        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
//        applicationId = "com.example.app_e_bike"
//        // You can update the following values to match your application needs.
//        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
//        minSdk = flutter.minSdkVersion
//        targetSdk = flutter.targetSdkVersion
//        versionCode = flutterVersionCode.toInteger()
//        versionName = flutterVersionName
//        multiDexEnabled true // Enable MultiDex
//    }
//
//    buildTypes {
//        release {
//            // TODO: Add your own signing config for the release build.
//            // Signing with the debug keys for now, so `flutter run --release` works.
//            signingConfig = signingConfigs.debug
//        }
//    }
//}
//
//flutter {
//    source = "../.."
//}







//plugins {
//    id "com.android.application"
//    id "kotlin-android"
////    id "kotlin-android-extensions"
//    id 'kotlin-parcelize'
//
//    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
//    id "dev.flutter.flutter-gradle-plugin"
//    id "com.google.gms.google-services"
//}
//
//repositories {
//    google()
//    mavenCentral()
//}
//
//def localProperties = new Properties()
//def localPropertiesFile = rootProject.file("local.properties")
//if (localPropertiesFile.exists()) {
//    localPropertiesFile.withReader("UTF-8") { reader ->
//        localProperties.load(reader)
//    }
//}
//
//def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
//if (flutterVersionCode == null) {
//    flutterVersionCode = "1"
//}
//
//def flutterVersionName = localProperties.getProperty("flutter.versionName")
//if (flutterVersionName == null) {
//    flutterVersionName = "1.0"
//}
//
//android {
//    namespace = "com.example.app_e_bike"
//    compileSdk = flutter.compileSdkVersion
//    ndkVersion = flutter.ndkVersion
//
//    compileOptions {
//        sourceCompatibility = JavaVersion.VERSION_1_8
//        targetCompatibility = JavaVersion.VERSION_1_8
//    }
//
//    defaultConfig {
//        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
//        applicationId = "com.example.app_e_bike"
//        // You can update the following values to match your application needs.
//        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
//        minSdk = flutter.minSdkVersion
//        targetSdk = flutter.targetSdkVersion
//        versionCode = flutterVersionCode.toInteger()
//        versionName = flutterVersionName
//        multiDexEnabled true // Enable MultiDex
//    }
//
//    buildTypes {
//        release {
//            // TODO: Add your own signing config for the release build.
//            // Signing with the debug keys for now, so `flutter run --release` works.
//            signingConfig = signingConfigs.debug
//        }
//    }
//    viewBinding {
//        enabled = true
//    }
//}
//
//flutter {
//    source = "../.."
//}
//
//dependencies {
//    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.0"
//    implementation 'com.google.android.gms:play-services-maps:17.0.0'
//    implementation 'com.google.android.gms:play-services-location:18.0.0'
//    implementation 'androidx.multidex:multidex:2.0.1' // Add MultiDex library
//}




//
//
//
//
//
//plugins {
//    id "com.android.application"
//    id "kotlin-android"
//    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
//    id "dev.flutter.flutter-gradle-plugin"
//}
//
//def localProperties = new Properties()
//def localPropertiesFile = rootProject.file("local.properties")
//if (localPropertiesFile.exists()) {
//    localPropertiesFile.withReader("UTF-8") { reader ->
//        localProperties.load(reader)
//    }
//}
//
//def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
//if (flutterVersionCode == null) {
//    flutterVersionCode = "1"
//}
//
//def flutterVersionName = localProperties.getProperty("flutter.versionName")
//if (flutterVersionName == null) {
//    flutterVersionName = "1.0"
//}
//
//android {
//    namespace = "com.example.app_e_bike"
//    compileSdk = flutter.compileSdkVersion
//    ndkVersion = flutter.ndkVersion
//
//    compileOptions {
//        sourceCompatibility = JavaVersion.VERSION_1_8
//        targetCompatibility = JavaVersion.VERSION_1_8
//    }
//
//    defaultConfig {
//        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
//        applicationId = "com.example.app_e_bike"
//        // You can update the following values to match your application needs.
//        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
//        minSdk = flutter.minSdkVersion
//        targetSdk = flutter.targetSdkVersion
//        versionCode = flutterVersionCode.toInteger()
//        versionName = flutterVersionName
//    }
//
//    buildTypes {
//        release {
//            // TODO: Add your own signing config for the release build.
//            // Signing with the debug keys for now, so `flutter run --release` works.
//            signingConfig = signingConfigs.debug
//        }
//    }
//}
//
//flutter {
//    source = "../.."
//}
//
//dependencies {
//    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
//    implementation 'androidx.core:core-ktx:1.6.0'
//    implementation 'androidx.appcompat:appcompat:1.3.0'
//    implementation 'com.google.android.material:material:1.4.0'
//    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
//    testImplementation 'junit:junit:4.+'
//    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
//    implementation 'com.google.android.gms:play-services-maps:17.0.0'
//    implementation 'com.google.android.gms:play-services-location:18.0.0'
//    implementation 'androidx.multidex:multidex:2.0.1' // Add MultiDex library
//}





